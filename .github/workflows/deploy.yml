name: Deploy Pygame Web

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pygbag
          pip install -r requirements.txt

      - name: Build game with pygbag
        run: |
          python -m pygbag --build --app_name "PlatformerGame" main.py

      - name: Setup GitHub Pages
        uses: actions/configure-pages@v4

      - name: Upload GitHub Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "build/web"

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  proxy:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Install dependencies
        run: |
          npm install express http-proxy-middleware

      - name: Create proxy configuration
        run: |
          cat > _redirects << EOL
          /*    /index.html   200
          EOL

      - name: Create proxy script
        run: |
          cat > proxy.js << EOL
          const express = require('express');
          const { createProxyMiddleware } = require('http-proxy-middleware');
          const app = express();

          app.use(express.static('build/web'));

          app.use('/api', createProxyMiddleware({
            target: 'http://localhost:8000',
            changeOrigin: true,
            pathRewrite: {
              '^/api': ''
            }
          }));

          app.listen(3000, () => {
            console.log('Proxy server running on port 3000');
          });
          EOL

      - name: Start proxy server
        run: node proxy.js
